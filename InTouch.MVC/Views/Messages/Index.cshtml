@model IEnumerable<InTouch.MVC.Models.ApplicationUser>
@inject IMessageService MessageService
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Messages";
    var currentUserId = UserManager.GetUserId(User); // currentUserId is still useful for other logic in the view
}

<input type="hidden" id="currentUserId" value="@currentUserId" />

<div class="container">
    <h1 class="mb-4">Messages</h1>

    <div class="row">
        @if (Model != null && Model.Any())
        {
            <div class="col-md-4 col-lg-3 mb-4 mb-md-0">
                <div class="card shadow-sm">
                    <div class="card-header bg-white">
                        <h5 class="mb-0">Conversations</h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="list-group list-group-flush" id="conversationsList">
                            @foreach (var user in Model.OrderByDescending(u => MessageService.GetLastMessageAsync(u.Id).Result?.SentAt ?? DateTime.MinValue))
                            {
                                var lastMessage = await MessageService.GetLastMessageAsync(user.Id);
                                var unreadCount = await MessageService.GetUnreadCountAsync(user.Id);
                                var isActive = ViewData["ActiveUserId"]?.ToString() == user.Id;

                                <a asp-action="Conversation" asp-route-userId="@user.Id"
                                   class="list-group-item list-group-item-action @(isActive ? "active" : "")"
                                   data-userid="@user.Id">
                                    <div class="d-flex align-items-center">
                                        <div class="position-relative me-3">
                                            <img src="@(string.IsNullOrEmpty(user.ProfilePicture) ? "/images/default-profile.jpg" : user.ProfilePicture)"
                                                 class="rounded-circle" alt="Profile" style="width: 48px; height: 48px; object-fit: cover;" />

                                            @if (DateTime.UtcNow - user.LastActive < TimeSpan.FromMinutes(1))
                                            {
                                                <span class="position-absolute bottom-0 end-0 bg-success rounded-circle p-1"
                                                      style="width:10px; height:10px; border: 2px solid white;"></span>
                                            }
                                        </div>
                                        <div class="flex-grow-1 overflow-hidden">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <h6 class="mb-0 text-truncate conversation-user-name">@user.FirstName @user.LastName</h6>
                                                @if (lastMessage != null)
                                                {
                                                    <small class="last-message-time">@lastMessage.SentAt.ToLocalTimeString("HH:mm", "en-US")</small>
                                                }
                                                else
                                                {
                                                    <small class="last-message-time"></small>
                                                }
                                            </div>
                                            <p class="mb-0 text-truncate small last-message-content @(unreadCount > 0 && (lastMessage?.SenderId == user.Id) ? "fw-bold" : "text-muted")">
                                                @if (lastMessage != null)
                                                {
                                                    @((lastMessage.SenderId == currentUserId ? "You: " : "") + lastMessage.Content)
                                                }
                                            </p>
                                        </div>
                                        @if (unreadCount > 0)
                                        {
                                            <span class="badge bg-primary rounded-pill ms-2 unread-badge">@unreadCount</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-primary rounded-pill ms-2 unread-badge" style="display:none;">0</span>
                                        }
                                    </div>
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-8 col-lg-9">
                @if (ViewData["ActiveUserId"] == null)
                {
                    <div class="text-center p-5">
                        <i class="bi bi-chat-dots text-muted" style="font-size: 5rem;"></i>
                        <h3 class="mt-3">Your Messages</h3>
                        <p class="text-muted">Select a conversation to start chatting.</p>
                    </div>
                }
                else
                {
                    @await Html.PartialAsync("_ConversationPartial")
                }
            </div>
        }
        else
        {
            <div class="col">
                <div class="text-center p-5">
                    <i class="bi bi-chat-dots text-muted" style="font-size: 5rem;"></i>
                    <h3 class="mt-3">No Messages Yet</h3>
                    <p class="text-muted">You don't have any conversations yet.</p>
                    <a asp-controller="Friends" asp-action="Index" class="btn btn-primary mt-3">
                        <i class="bi bi-people"></i> Find friends to chat with
                    </a>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="~/lib/signalr/signalr.min.js"></script>
    <script src="~/js/chat.js" asp-append-version="true"></script>
}